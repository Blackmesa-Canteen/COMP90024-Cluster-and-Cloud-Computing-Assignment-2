---
# Create an instance on NeCTAR
- name: Create backend instance
  openstack.cloud.server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ item.security_groups }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ back_instances }}'
  register: os_bk_instance

- name: Create frontend instance
  openstack.cloud.server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ front_instances }}'
  register: os_fr_instance

- ansible.builtin.debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_bk_instance.results + os_fr_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  ansible.builtin.wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_bk_instance.results + os_fr_instance.results }}'
  when: item.openstack is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  ansible.builtin.add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: backend
  loop: '{{ os_bk_instance.results }}'
  when: item.openstack is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  ansible.builtin.add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: frontend
  loop: '{{ os_fr_instance.results }}'
  when: item.openstack is defined

